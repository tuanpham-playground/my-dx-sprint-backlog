on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release

jobs:
  release:
    name: Create release
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_branch: ${{ steps.release.outputs.release_branch }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: create-iat
        with:
          app-id: ${{ secrets.RELEASE_GITHUB_APP_ID}}
          private-key: ${{ secrets.RELEASE_GITHUB_APP_KEY }}
      - uses: google-github-actions/release-please-action@cc61a07e2da466bebbc19b3a7dd01d6aecb20d1e # v4
        id: release
        with:
          token: ${{ steps.create-iat.outputs.token }}

  update_manifest:
    name: Update manifest.json
    needs: release
    runs-on: ubuntu-latest
    steps:
      # setup ruby environment before running jonabc/setup-licensed
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby

      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Configure npm user
        run: npm config set "//registry.npmjs.org/:_authToken=${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update Manifest Version
        run: |
          echo "=========Pushing changes to: ${{  steps.release.outputs.release_branch }} ====="
          pnpm syncVersion
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add plugin/manifest.json
          git commit -m "chore: update manifest version"
          git push origin ${{ steps.release.outputs.release_branch }}

  upload:
    name: Upload executables
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: update_manifest
    if: ${{ needs.release.outputs.release_created }}
    steps:
      # setup ruby environment before running jonabc/setup-licensed
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby

      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - run: pnpm build
      - name: Upload executables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(jq -r '.version' ./package.json)
          gh release upload ${{ steps.release.outputs.tag_name }} \
            ./dist/plugin.zip \
